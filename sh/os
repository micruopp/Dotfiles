#!/bin/zsh

## Operating system tool
## Main function
os() {
  for arg in $@
  do
    case $arg in
      backup)
        __os_backup
        ;;
      info)
        __os_info
        ;;
      update)
        __os_update
        ;;
      *)
        echo "os:: invalid arguments"
        echo "$arg"
        ;;
    esac
  done
}

## Backup
## Save a snapshot of this machine to local and remote storage.
__os_backup() {
  echo "TODO: backup this machine"
}

## Info
## Print system information
__os_info() {
  echo "TODO: print system info"
  uptime | egrep -o 'up.*(([0-9]:[0-9][0-9])|(mins))'
}

## Update
## Check for updates to all monitored codebases.
__os_update() {
  echo "TODO: check for updates"
}

## Install
## To make a fresh setup familiar.
## TODO: Everything
##       - Install personal git repos
##       - Install brew
##       - Install brew packages
##       - Install command line tools
##       - Install Xcode
##       - 
__os_install() {
  # TODO: 
  echo "TODO: write the install script!"
  echo "TODO: jk, this needs to be a standalone executable"
  echo "      ... if it is meant to install everything else."
  echo "      ... it can't require anything else."
}

__os_battery_health() {
  # This displays a lot of information, including:
  #   Original capacity:
  #     "DesignCapacity" = 4382
  #   Current capacity:
  #     "AppleRawMaxCapacity" = 4163
  #   Health level:
  #     AppleRawMax / Design => Percent 
  
  ioreg_output=`ioreg -l -w0 | grep Capacity.`
  
  design_capacity_string=`echo $ioreg_output | grep -o "\"DesignCapacity\" = [0-9]\+"`
  design_capacity=`echo $design_capacity_string | grep -o "[0-9]\+"`

  raw_max_capacity_string=`echo $ioreg_output | grep -o "\"AppleRawMaxCapacity\" = [0-9]\+"`
  raw_max_capacity=`echo $raw_max_capacity_string | grep -o "[0-9]\+"`

  echo $design_capacity
  echo $raw_max_capacity
  
  percent_precision="2"
  health_percent=$(echo "scale=$percent_precision; (raw_max_capacity / $design_capacity) * 100" | bc)
  echo $health_percent
}




